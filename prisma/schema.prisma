generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DB_URL")
    directUrl = env("DIRECT_URL")
    relationMode = "prisma"
}

model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String? 
    access_token      String? 
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String? 
    session_state     String?
    user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
    @@index([userId])
}

model Session {
    id           String      @id @default(cuid())
    sessionToken String      @unique
    userId       String
    expires      DateTime
    user         User        @relation(fields: [userId], references: [id], onDelete: Cascade)
    @@index([userId])
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}

model User {
    id            String    @id @default(cuid())
    fullName      String?
    email         String    @unique
    emailVerified DateTime?
    accounts      Account[]
    sessions      Session[]
    memberships   Membership[]
}

model Business {
    id            String   @id @default(cuid())
    name          String
    bio           String?
    memberships   Membership[]
}

enum Role {
  USER
  ADMIN
}

model Membership {
    id            String    @id @default(cuid())
    user          User      @relation(fields: [userId], references: [id])
    userId        String
    business      Business  @relation(fields: [businessId], references: [id])
    businessId    String 
    role          Role      @default(USER)

    @@index([userId])
    @@index([businessId])
}

